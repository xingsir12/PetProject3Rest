services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: weather-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: PetProject3
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql  # Опционально
    networks:
      - weather-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: weather-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather-app
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/PetProject3
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

      # Redis Configuration
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false

      # Logging
      LOGGING_LEVEL_RU_XING_SPRINGCOURSE: INFO

      # Server
      SERVER_PORT: 8081
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Volumes для персистентности данных
volumes:
  postgres_data:
    driver: local

# Сеть для изоляции контейнеров
networks:
  weather-network:
    driver: bridge